import matplotlib.pyplot as plt

# Define the 4x4 matrix
confusion_matrix = [[[0, 0,89, 0], [0, 0, 4, 0],[0, 0, 324, 0],[0, 0, 224, 0]],[[0, 0,78,11],[0,0,4,0],
[0,0,323,1],[0,0,209,15]],[[0,0,1,88],[0,0,0,4],[0,0,184,140],[0,0,38,186]],[[0,0,19,70,
[0,0,0,4],[0,0,215,109],[0,0,85, 139]],[[5, 0, 0,84],[0, 0, 0, 4],[3, 0, 126, 195],[1, 0,15, 208]],
[[ 23, 0,10,56],[3, 0, 0, 1],[ 27, 0, 189, 108],[ 22, 0,48, 154]],[[0, 0,15,74],[0, 0, 0, 4],[0, 0, 232,92],
[0, 0,86, 138]],[[ 67, 0, 0,22],[4, 0, 0, 0],[ 58, 0, 172,94],[124, 0,27,73]], [[ 27, 0, 0,62],[4, 0, 0, 0],
[ 10, 0, 182, 132],[ 38, 0,34, 152]], [[0, 0,15,74],[0, 0, 0, 4],[0, 0, 266,58],[2, 0,90, 132]],[[ 20, 0, 7,62],
[4, 0, 0, 0],[7, 0, 230,87],[ 62, 0,57, 105]], [[ 34, 0, 0,55],[2, 0, 0, 2],[6, 0, 187, 131],[ 50, 0,29, 145]],
[[ 24, 0, 0,65],[4, 0, 0, 0],[3, 0, 153, 168],[ 29, 0,25, 170]],[[1, 0,23,65],[1, 0, 0, 3],[0, 0, 299,25],
[5, 0, 132,87]], [[ 11, 0,32,46],[3, 0, 0, 1],[0, 0, 305,19],[ 17, 0, 125,82]],[[ 45, 0, 0,44],[4, 0, 0, 0],
[4, 0, 160, 160],[ 94, 0,14, 116]],[[ 26, 0, 2,61],[4, 0, 0, 0],[0, 0, 239,85],[ 13, 0,59, 152]], [[ 25, 0,17,47],
[4, 0, 0, 0],[0, 0, 292,32],[ 11, 0, 144,69]],[[ 22, 0, 5,62],[4, 0, 0, 0],[0, 0, 282,42],[ 20, 0,99, 105]],
[[ 27, 0,14,48],[4, 0, 0, 0],[0, 0, 310,14],[ 63, 0,76,85]],[[ 66, 0, 0,23],[4, 0, 0, 0],[4, 0, 164, 156],
[ 31, 0,17, 176]], [[ 44, 0, 0,45],[4, 0, 0, 0],[0, 0, 275,49],[6, 0,55, 163]],[[ 52, 0, 2,35],[4, 0, 0, 0],
[0, 0, 269,55],[ 25, 0,47, 152]],[[ 52, 0, 2,35],[4, 0, 0, 0],[0, 0, 259,65],[ 41, 0,17, 166]],[[ 57, 0, 0,32],
[3, 0, 0, 1],[0, 0, 294,30],[ 26, 0,58, 140]],[[8, 0, 6,75],[1, 0, 0, 3],[0, 0, 304,20],[0, 0,73, 151]],
[[ 12, 0,12,65],[1, 0, 0, 3],[0, 0, 319, 5],[0, 0,91, 133]],[[ 41, 0,12,36],[4, 0, 0, 0],[0, 0, 317, 7],
[ 15, 0, 104, 105]],[[ 18, 0, 0,71],[4, 0, 0, 0],[0, 0, 250,74],[0, 0,28, 196]],[[ 78, 0, 1,10],[4, 0, 0, 0],
 [1, 0, 302,21],[ 44, 0,63, 117]],[[ 65, 0, 0,24],[4, 0, 0, 0],[0, 0, 181, 143],[2, 0, 5, 217]],[[ 69, 0, 0,20],
[4, 0, 0, 0],[ 0, 0, 289,35],[ 20, 0,29, 175]],[[ 58, 0, 0,31],[2, 2, 0, 0],[0, 0, 286,38],[ 16, 0, 9, 199]],
[[ 61, 1, 0,27],[0, 4, 0, 0],[0, 0, 243,81],[5, 0, 7, 212]],[[ 77, 0, 0,12],[3, 1, 0, 0],[0, 0, 234,90],
[ 14, 0, 7, 203]],[[ 53, 0, 0,36],[4, 0, 0, 0],[0, 0, 304,20],[ 18, 0,11, 195]],[[ 75, 0, 0,14],[1, 3, 0, 0],
 [0, 0, 299,25],[6, 0,25, 193]],[[ 69, 0, 0,20],[1, 3, 0, 0],[0, 0, 309,15],[1, 0,43, 180]],[[ 54, 0, 0,35],
 [4, 0, 0, 0],[0, 0, 278,46],[0, 0,22, 202]],[[ 63, 0, 0,26],[4, 0, 0, 0],[0, 0, 306,18],[6, 0,27, 191]],
 [[ 55,21, 0,13],[0, 4, 0, 0],[0, 0, 255,69],[3, 4, 3, 214]],[[ 69, 0, 0,20],[0, 4, 0, 0],[0, 0, 271,53],
 [3, 1, 3, 217]],[[ 54, 0, 1,34],[1, 2, 0, 1],[0, 0, 320, 4],[1, 0,70, 153]], [[ 71, 0, 0,18],[1, 3, 0, 0],
[0, 0, 293,31],[4, 0, 5, 215]], [[ 52, 0, 0,37],[0, 4, 0, 0],[0, 0, 300,24],[0, 0,19, 205]],[[ 73, 0, 0,16],
[1, 3, 0, 0],[0, 0, 313,11],[ 16, 0,14, 194]],[[ 75, 0, 0,14],[0, 4, 0, 0],[0, 0, 307,17],[ 19, 0, 6, 199]],
[[ 72, 0, 0,17],[0, 4, 0, 0],[0, 0, 313,11],[5,0,20,199]],[[ 79, 0, 0,10],[1, 3, 0, 0],[0, 0, 306,18],
[8, 0,22, 194]],[[ 73, 4, 0,12],[0, 4, 0, 0],[0, 0, 300,24],[6, 0,29, 189]],[[ 71, 0, 0,18],[1, 3, 0, 0],
[0, 0, 310,14],[6, 0,35, 183]],[[ 67, 0, 0,22],[0, 4, 0, 0],[0, 0, 310,14],[6, 0,27, 191]],[[ 58, 0, 0,31],
[2, 2, 0, 0],[0, 0, 311,13],[3, 0,23, 198]],[[ 82, 0, 0, 7],[1, 3, 0, 0],[2, 0, 280,42],[ 18, 0, 3, 203]],
[[ 79, 0, 0,10],[0, 4, 0, 0],[1, 0, 309,14],[ 11,0,9,204]],[[ 59, 0, 0,30],[0, 4, 0, 0],[0, 0, 314,10],
[0, 0,17, 207]],[[ 67, 0, 0,22],[0, 4, 0, 0],[1, 0, 295,28],[1, 0, 8, 215]],[[77, 0, 0,12],[0, 4, 0, 0],
[1, 0, 312,11],[5, 0,13, 206]],[[ 74, 0, 0,15],0, 4, 0, 0],[0, 0, 314,10],[4, 0,20, 200]],[[ 74, 0, 0,15],
 [0, 4, 0, 0],[0, 0, 301,23],[0, 0, 8, 216]],[[ 69, 0, 0,20],[0, 4, 0, 0],[0, 0, 303,21],[0, 0,14, 210]],
[[ 66, 0, 0,23],[0, 4, 0, 0],[0, 0, 310,14],[0, 0,23, 201]],[[ 65, 0, 0,24],[0, 4, 0, 0],[0, 0, 311,13],
[ 0, 0,24, 200]],[[ 77, 0, 0,12],[0, 4, 0, 0],[0, 0, 312,12],[0, 0,19, 205]],[[ 79, 0, 0,10],[0, 4, 0, 0],
[0, 0, 310,14],[1, 0, 9, 214]],[[ 78, 0, 0,11],[0, 4, 0, 0],[0, 0, 304,20],[1, 0, 8, 215]],[[ 73, 0, 0,16],
[ 0, 4, 0, 0],[0, 0, 307,17],[0, 0, 8, 216]],[[ 73, 0, 0,16],[ 0, 4, 0, 0],[0, 0, 307,17],[0, 0, 8, 216]],
[[ 75, 0, 0,14],[0, 4, 0, 0],[0, 0, 306,18],[0, 0, 8, 216]],[[ 74, 0, 0,15],[0, 4, 0, 0],[0, 0, 307,17],
[0,0,8,216]]]

# Define formulas for each element of the 2x2 matrices
def formula_A(matrix):
    A11=matrix[0][0]
    A12=matrix[0][1]+matrix[0][2]+matrix[0][3]
    A21= matrix[1][0]+matrix[2][0]+matrix[3][0]
    A22= matrix[1][1]+matrix[1][2]+matrix[1][3]+matrix[2][1]+matrix[2][2]+matrix[2][3]+matrix[3][1]+matrix[3][2]+matrix[3][3]
    return [A11,A12,A21,A22]
    

def formula_B(matrix):
    B11=matrix[1][1]
    B12=matrix[2][0]+matrix[2][2]+matrix[2][3]
    B21= matrix[2][1]+matrix[3][1]
    B22= matrix[2][2]+matrix[2][3]+matrix[3][2]+matrix[3][3]+matrix[2][0]+matrix[3][0]+matrix[0][0]+matrix[0][1]+matrix[0][2]+matrix[0][3]
    return [B11,B12,B21,B22]

def formula_C(matrix):
    C11=matrix[2][2]
    C12=matrix[2][0]+matrix[2][1]+matrix[2][3]
    C21= matrix[0][2]+matrix[1][2]+matrix[3][2]
    C22= matrix[0][0]+matrix[0][1]+matrix[0][2]+matrix[0][3]+matrix[1][0]+matrix[1][1]+matrix[1][2]+matrix[1][3]+matrix[3][1]+matrix[3][2]+matrix[3][3]
    return [C11,C12,C21,C22]

def formula_D(matrix):
    D11=matrix[3][3]
    D12=matrix[3][0]+matrix[3][1]+matrix[3][2]
    D21= matrix[0][3]+matrix[1][3]+matrix[2][3]
    D22= matrix[0][0]+matrix[0][1]+matrix[0][2]+matrix[1][0]+matrix[1][1]+matrix[1][2]+matrix[2][0]+matrix[2][1]+matrix[2][2]
    return [D11,D12,D21,D22]

TPRA=[]
FPRA=[]
TPRB=[]
FPRB=[]
TPRC=[]
FPRC=[]
TPRD=[]
FPRD=[]

for matrix_m in confusion_matrix:

    print(formula_A(matrix_m))
    print(formula_B(matrix_m))
    print(formula_C(matrix_m))
    print(formula_D(matrix_m))

    [TPA,TNA,FPA,FNA]=formula_A(matrix_m)
    [TPB,TNB,FPB,FNB]=formula_B(matrix_m)
    [TPC,TNC,FPC,FNC]=formula_C(matrix_m)
    [TPD,TND,FPD,FND]=formula_D(matrix_m)

    TPRA.append(TPA/(TPA+FNA))
    FPRA.append(FPA/(FPA+TNA))

    TPRB.append(TPB/(TPB+FNB))
    FPRB.append(FPB/(FPB+TNB))

    TPRC.append(TPC/(TPC+FNC))
    FPRC.append(FPC/(FPC+TNC))

    TPRD.append(TPD/(TPD+FND))
    FPRD.append(FPD/(FPD+TND))





plt.plot(TPRA, FPRA, label="line 1")
plt.plot(TPRB, FPRB, label = "line 2")
plt.plot(TPRC, FPRC, label="line 3")
plt.plot(TPRD, FPRD, label = "line 4")

# naming the x axis
plt.xlabel('x - axis')
# naming the y axis
plt.ylabel('y - axis')


# show a legend on the plot
plt.legend()

# function to show the plot
plt.show()







